{"version":3,"sources":["images/basic-portfolio-template.gif","images/static-website.gif","images/ecommerce-website.gif","images/basic-modal.gif","images/annimation.gif","components/StoreCartBtn.js","components/StoreCategoryNames.js","components/StoreCategoryBtn.js","components/StoreHeader.js","components/StoreProduct.js","components/StoreProductBody.js","components/StoreCategoryBody.js","components/CartProduct.js","components/OrderForm.js","components/StoreCartBody.js","Store.js","serviceWorker.js","index.js"],"names":["module","exports","StoreCart","className","onClick","this","props","showCart","React","Component","StoreCategoryOpt","storeSubCategoryOpt","showCategories","Storeheader","StoreCategoryBtn","StoreCategoryNames","StoreCartBtn","thumbnails","tbl1","tbl2","tbl3","tbl4","tbl5","index","StoreProduct","state","cartBtnClicked","addProductToCart","bind","doOrder","addToCart","id","placeOrder","style","backgroundImage","title","price","StoreProductBody","Categories","map","category","name","description","products","product","StoreCategoryBody","subcategories","subcategory","CartProduct","deleteFromCart","removeFromCart","setTotalPrice","key","OrderForm","message","custmerName","contactNo","submitOrder","getCustmerName","getContactNo","e","target","value","fetch","method","headers","body","JSON","stringify","totalPrice","then","res","json","data","setState","catch","err","console","log","type","placeholder","onChange","Button","variant","color","StoreCartBody","cartProducts","forEach","parseInt","showStore","require","Store","isCategoryBtnClicked","isCartBtnClicked","productFromId","idArr","push","filter","concat","Fragment","StoreHeader","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8dfb9d92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/basic-portfolio-template.d92d4652.gif\";","module.exports = __webpack_public_path__ + \"static/media/static-website.05eb5194.gif\";","module.exports = __webpack_public_path__ + \"static/media/ecommerce-website.b474415b.gif\";","module.exports = __webpack_public_path__ + \"static/media/basic-modal.776c5e5a.gif\";","module.exports = __webpack_public_path__ + \"static/media/annimation.e5616c0b.gif\";","import React from 'react'\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\n\nclass StoreCart extends React.Component{\n\n    render(){\n        return(\n            <div \n            className='store-cart'\n            onClick = {\n                this.props.showCart\n            }\n            >\n                <ShoppingBasketIcon\n                className='cart-icon'/>\n                <p>Your Orders</p>\n            </div>\n        )\n    }\n}\n\nexport default StoreCart","import React from 'react'\n\nclass StoreCategoryOpt extends React.Component{\n    render(){\n        return(\n            <div className='store-category-opt'>\n                \n            </div>\n        )\n    }\n}\n\nexport default StoreCategoryOpt","import React from 'react'\nimport CategoryIcon from '@material-ui/icons/Category';\n\n\nclass storeSubCategoryOpt extends React.Component{\n    render(){\n        return(\n            <div className='store-subcategory-opt'\n            onClick={this.props.showCategories}>\n                <CategoryIcon\n                className='category-icon'/>\n                <p>Category</p>\n            </div>\n        )\n    }\n}\n\nexport default storeSubCategoryOpt","import React from 'react'\nimport StoreCartBtn from './StoreCartBtn'\nimport StoreCategoryNames from './StoreCategoryNames'\nimport StoreCategoryBtn from './StoreCategoryBtn'\n\n\nclass Storeheader extends React.Component{\n    render(){\n        return(\n            <header className='store-header'>\n                <StoreCategoryBtn\n                showCategories={this.props.showCategories}\n                />\n                <StoreCategoryNames/>\n                <StoreCartBtn\n                showCart = {this.props.showCart}\n                />\n            </header>\n        )\n    }\n}\n\n\nexport default Storeheader","import React from 'react'\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport TurnedInIcon from '@material-ui/icons/TurnedIn';\n\nimport tbl1 from  '../images/basic-portfolio-template.gif'\nimport tbl2 from  '../images/static-website.gif'\nimport tbl3 from  '../images/ecommerce-website.gif'\nimport tbl4 from  '../images/basic-modal.gif'\nimport tbl5 from  '../images/annimation.gif'\n\n\n\nlet thumbnails = [tbl1,'',tbl2,'',tbl3,'',tbl4,'',tbl5]\nlet index = 0\n\n\nclass StoreProduct extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            cartBtnClicked:false\n        }\n        this.addProductToCart = this.addProductToCart.bind(this)\n        this.doOrder = this.doOrder.bind(this)\n    }\n\n    addProductToCart(){\n        this.props.addToCart(this.props.id)\n    }\n\n    doOrder(){\n        this.props.placeOrder(this.props.id)\n    }\n\n    render(){\n        return(\n            <div className='store-product'>\n                <div className='product-feature-thumbnail'\n                style = {{\n                backgroundImage: `url(${thumbnails[index++]})`\n            }}>\n                </div>\n                <div className='product-data'>\n                    <div className='product-title'>\n                        {this.props.title}\n                    </div>\n                    <div className='product-meta-data'>\n                        <div className='product-price'>\n                            <p>\n                                <span>₹</span>\n                                {this.props.price}\n                            </p>\n                        </div>\n                        <div className='show-more-btn'>Show more</div>\n                        <div className='product-btns'>\n                            <div className='place-order-btn'\n                            onClick = {this.doOrder}>\n                                    <div\n                                    className = 'place-order'\n                                    >\n                                        <TurnedInIcon\n                                        className='place-order-icon'\n                                        />\n                                        <span>Order</span>\n                                    </div>\n                                </div>\n                            <div className='add-to-cart-btn'\n                            onClick = {this.addProductToCart}>\n                                <ShoppingCartIcon\n                                className='product-cart-icon'\n                                /> \n                            </div>\n                        </div>\n                    </div>\n                    <div className='product-hidden-data'></div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default StoreProduct","import React from 'react'\nimport StoreProduct from './StoreProduct'\n\n\nclass StoreProductBody extends React.Component{\n    render(){\n        return(\n            <div className = 'store-product-body'>\n                {this.props.Categories.map((category)=>{\n                    return(\n                        <div>\n                            <p className='store-product-category'>\n                                {category.name}\n                            </p>\n                            <div className='product-category-data'>\n                                {category.description}\n                            </div>\n                            <div className='store-product-box'>\n                                {category.products.map((product)=>{\n                                    return(\n                                        <StoreProduct\n                                        price = {product.price}\n                                        title = {product.title}\n                                        id = {product.id}\n                                        addToCart = {this.props.addToCart}\n                                        placeOrder = {this.props.placeOrder}\n                                        />\n                                    )\n                                })}\n                            </div>\n                            <hr className = 'category-seperator'/>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default StoreProductBody","import React from 'react'\n// import CancelIcon from '@material-ui/icons/Cancel';\n\nclass StoreCategoryBody extends React.Component{\n    render(){\n        return(\n            <div className='store-category-body'>\n                <ul className='category-list'>\n                {this.props.Categories.map((category)=>{\n                return (\n                    <li className='store-category-list'>\n                        <p>{category.name}</p>\n                        <ul>\n                            {category.subcategories.map((subcategory)=>{\n                            return <li className='store-subcategory-list'>{subcategory}</li>\n                            })}\n                        </ul>\n                    </li>\n                )})}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default StoreCategoryBody","import React from 'react'\nimport ClearIcon from '@material-ui/icons/Clear'\n\n\nclass CartProduct extends React.Component{\n    constructor(props){\n        super(props)\n        this.deleteFromCart = this.deleteFromCart.bind(this)\n    }\n\n\n    deleteFromCart(){\n        this.props.removeFromCart(this.props.id)\n        this.props.setTotalPrice()\n    }\n\n\n    render(){\n        return(\n            <tr key = {this.props.id}>\n                <td>\n                    {this.props.title}\n                </td>\n                <td>\n                    {this.props.price}\n                </td>\n                <td>\n                    <ClearIcon\n                    onClick = {this.deleteFromCart}/>\n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default CartProduct","import React from 'react'\nimport {Button} from '@material-ui/core'\nimport FaceIcon from '@material-ui/icons/Face';\nimport PhoneIcon from '@material-ui/icons/Phone';\n\nclass OrderForm extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            message:'Submit Your Order'\n        }\n        this.custmerName = ''\n        this.contactNo = ''\n        this.submitOrder = this.submitOrder.bind(this)\n        this.getCustmerName = this.getCustmerName.bind(this)\n        this.getContactNo = this.getContactNo.bind(this)\n    }\n\n\n    getCustmerName(e){\n        this.custmerName = e.target.value\n    }\n\n    getContactNo(e){\n        this.contactNo = e.target.value\n    }\n\n\n    submitOrder(){\n        fetch('/order',{\n            method:'POST',\n            headers:{\n                'content-type':'application/json'\n            },\n            body:JSON.stringify({\n                custmerName : this.custmerName,\n                contactNo : this.contactNo,\n                products: this.props.products,\n                totalPrice:this.props.totalPrice\n            })\n        })\n        .then(res => res.json)\n        .then(data => {\n            this.setState({\n                message: data.message\n            })\n        })\n        .catch(err => console.log(err))\n    }\n\n    render(){\n        return(\n            <div className = 'order-form-wrapper'>\n                <div className='order-form'>\n                <div className='order-form-message'>\n                    {this.state.message}\n                </div>\n\n                <div className = 'order-form-details'>\n                    <span className = 'order-form-icons'>\n                        <FaceIcon/>\n                    </span>\n                    <input \n                    className='custmer-name order-input'\n                    type = 'text'\n                    placeholder = ' Your Name'\n                    onChange = {this.getCustmerName}/>\n                </div>\n\n                <div className = 'order-form-details'>\n                    <span className = 'order-form-icons'>\n                        <PhoneIcon/>\n                    </span>\n                    <input \n                    className='custmer-number order-input'\n                    type = 'number'\n                    placeholder = ' Contact No'\n                    onChange = {this.getContactNo}/>\n                </div>\n\n                <div\n                className = 'order-btn-wrapper'>\n                    <Button \n                    variant=\"contained\" \n                    color=\"primary\"\n                    className = 'order-btn'\n                    onClick = {this.submitOrder}>\n                        Submit\n                    </Button>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default OrderForm","import React from 'react'\nimport CartProduct from './CartProduct'\nimport OrderForm from './OrderForm'\nimport AddIcon from '@material-ui/icons/Add'\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart'\n\n\nclass StoreCartBody extends React.Component{\n    constructor(props){\n        super(props)\n        this.setTotalPrice = this.setTotalPrice.bind(this)\n    }\n\n\n    setTotalPrice(){\n        let price = 0\n        this.props.cartProducts.forEach(product =>{\n            price += parseInt(product.price)\n        })\n        return price\n    }\n\n    render(){\n        return(\n            <div\n            className = 'store-cart-body'>\n                <div\n                className = 'store-cart-heading-wrapper'>\n                    <div\n                    className = 'store-cart-heading'>\n                    <span>\n                        <AddShoppingCartIcon\n                        className = 'store-cart-body-icon'\n                        />\n                    </span>\n                    Your Cart\n                    </div>\n                </div>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Product</th>\n                            <th>Price</th>\n                            <th onClick = {this.props.showStore}>\n                                <AddIcon/>\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.cartProducts.map((product) =>{\n                            return(\n                                <CartProduct\n                                title = {product.title}\n                                price = {product.price}\n                                id = {product.id}\n                                removeFromCart = {this.props.removeFromCart}\n                                setTotalPrice = {this.setTotalPrice}\n                                />\n                            )\n                        })}\n                    </tbody>\n                </table>\n                <div\n                className = 'cart-final-details'>\n                    <div\n                    className = 'cart-total'\n                    >Total</div>\n                    <div\n                    className = 'cart-total-money'\n                    >\n                        <span>₹</span>\n                        {this.setTotalPrice()}\n                    </div>\n                </div>\n                <OrderForm\n                products = {this.props.cartProducts}\n                totalPrice ={this.setTotalPrice()}/>\n            </div>\n        )\n    }\n}\n\nexport default StoreCartBody","import React from 'react';\nimport './Store.css';\nimport StoreHeader from './components/StoreHeader'\nimport StoreProductBody from './components/StoreProductBody'\nimport StoreCategoryBody from './components/StoreCategoryBody'\nimport StoreCartBody from './components/StoreCartBody'\n\n\nconst Categories = require('./data/Categories.json')\n\n\nclass Store extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isCategoryBtnClicked: false,\n      isCartBtnClicked: false,\n      cartProducts: []\n    }\n\n\n    this.showCategories = this.showCategories.bind(this)\n    this.showCart = this.showCart.bind(this)\n    this.addToCart = this.addToCart.bind(this)\n    this.removeFromCart = this.removeFromCart.bind(this)\n    this.productFromId = this.productFromId.bind(this)\n    this.placeOrder = this.placeOrder.bind(this)\n    this.showStore = this.showStore.bind(this)\n\n  }\n\n\n  productFromId(idArr){\n    let products = []\n    Categories.forEach(category =>{\n      category.products.forEach(product =>{\n        idArr.forEach(id =>{\n          if(product.id == id){\n            products.push(product)\n          }\n        })\n      })\n    })\n    return products\n  }\n\n  showStore(){\n    this.setState({\n      isCartBtnClicked:false,\n      isCategoryBtnClicked:false\n    })\n  }\n  \n  placeOrder(id){\n    this.addToCart(id)\n    this.showCart()\n  }\n\n  removeFromCart(id){\n    this.setState({\n      cartProducts: this.state.cartProducts.filter(product => product.id !== id)\n    })\n  }\n\n\n  addToCart(id){\n    this.setState({\n      cartProducts: this.state.cartProducts.concat(this.productFromId([id]))\n    })\n  }\n\n\n  showCategories() {\n    this.setState({\n      isCategoryBtnClicked: !this.state.isCategoryBtnClicked\n    })\n  }\n\n\n  showCart() {\n    this.setState({\n      isCartBtnClicked: !this.state.isCartBtnClicked\n    })\n  }\n\n\n  render() {\n    if (this.state.isCategoryBtnClicked) {\n      return (\n        <React.Fragment>\n          <StoreCategoryBody\n            Categories={Categories}\n            showCategories={this.showCategories} />\n          <StoreHeader\n            showCategories={this.showCategories}\n            showCart={this.showCart}\n          />\n        </React.Fragment>\n      )\n    }\n    else if (this.state.isCartBtnClicked) {\n      return (\n        <React.Fragment>\n          <StoreCartBody\n            cartProducts = {this.state.cartProducts}\n            removeFromCart = {this.removeFromCart}\n            showStore = {this.showStore}\n          />\n          <StoreHeader\n            showCategories={this.showCategories}\n            showCart={this.showCart}\n          />\n        </React.Fragment>\n      )\n    }\n    else {\n      return (\n        <React.Fragment>\n          <StoreProductBody\n            Categories={Categories}\n            addToCart={this.addToCart}\n            placeOrder = {this.placeOrder}\n          />\n          <StoreHeader\n            showCategories={this.showCategories}\n            showCart={this.showCart}\n          />\n        </React.Fragment>\n      )\n    }\n  }\n}\n\nexport default Store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Store from './Store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Store \n    className = 'store'/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}